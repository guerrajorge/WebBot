<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LinqToWiki.Core</name>
    </assembly>
    <members>
        <member name="T:LinqToWiki.ApiErrorException">
            <summary>
            Exception representing an error returned by the API.
            </summary>
        </member>
        <member name="P:LinqToWiki.ApiErrorException.Code">
            <summary>
            Code of the exception.
            </summary>
        </member>
        <member name="T:LinqToWiki.Collections.DictionaryDictionary`3">
            <summary>
            Dictionary with composite key.
            Slightly simpler to use than <c>Dictionary&lt;TKey1, Dictionary&lt;TKey2, TValue&gt;&gt;</c>,
            because the inner dictionary can be created automatically.
            </summary>
        </member>
        <member name="M:LinqToWiki.Collections.DictionaryDictionary`3.GetOrCreateInnerDictionary(`0)">
            <summary>
            Returns the inner dictionary for the given key.
            If it doesn't exist yet, creates it first.
            </summary>
        </member>
        <member name="M:LinqToWiki.Collections.DictionaryDictionary`3.TryGetValue(`0,`1,`2@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <returns><c>>true</c> if the Dictionary contains an element with the specified key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:LinqToWiki.Collections.DictionaryDictionary`3.Add(`0,`1,`2)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
        </member>
        <member name="P:LinqToWiki.Collections.DictionaryDictionary`3.Item(`0,`1)">
            <summary>
            Gets or sets the value associated with the specified composite key.
            </summary>
        </member>
        <member name="T:LinqToWiki.Collections.ItemOrCollection`1">
            <summary>
            Class that can be compared with single item or a collection.
            
            This class is “virtual”, it is used only in queries and will never be instantiated.
            </summary>
            <remarks>
            This class is used in queries that accept multiple values for some properties,
            but it also allows simple comparison with a single item without creating a collection.
            
            Consider these two cases:
            <list type="bullet">
            <item><c>where x.prop == new[] { "foo", "bar" }</c></item>
            <item><c>where x.prop == "foo"</c></item>
            </list>
            
            If the where-property was <c>IEnumerable&lt;string&gt;</c>, the first case would compile,
            but the second one wouldn't. If it was just <c>string</c>, the first case wouldn't compile.
            Using this class, both cases work.
            
            This class isn't actually necessary, the user could always create a single-item collection.
            But this way, there is a simpler syntax for the common case of single item.
            </remarks>
        </member>
        <member name="T:LinqToWiki.Collections.TupleList`2">
            <summary>
            List of pairs of items.
            In contrast with <see cref="T:System.Collections.Generic.Dictionary`2"/>, a collection of this type is ordered.
            </summary>
        </member>
        <member name="M:LinqToWiki.Collections.TupleList`2.#ctor">
            <summary>
            Creates an empty list.
            </summary>
        </member>
        <member name="M:LinqToWiki.Collections.TupleList`2.#ctor(System.Collections.Generic.IEnumerable{System.Tuple{`0,`1}})">
            <summary>
            Creates a list based on another collection.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:LinqToWiki.Collections.TupleList`2.Add(`0,`1)">
            <summary>
            Adds a pair of items to the end of the list.
            </summary>
        </member>
        <member name="P:LinqToWiki.Collections.TupleList`2.Item(`0)">
            <summary>
            Finds the first tuple with given <see cref="P:System.Tuple`2.Item1"/>
            and returns its <see cref="P:System.Tuple`2.Item2"/>.
            
            The set accesor finds first item with given <see cref="P:System.Tuple`2.Item1"/>
            and replaces it with new <see cref="T:System.Tuple`2"/> containing <c>value</c>
            as <see cref="P:System.Tuple`2.Item2"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Downloader">
            <summary>
            Downloads the results of a query from the wiki web site.
            </summary>
        </member>
        <member name="M:LinqToWiki.Downloader.Download(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            Downloads the results of query defined by <see cref="!:parameters"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Downloader.LogRequest(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            Logs the request to the console.
            </summary>
        </member>
        <member name="M:LinqToWiki.Downloader.CreateRequest">
            <summary>
            Creates a POST request.
            </summary>
        </member>
        <member name="M:LinqToWiki.Downloader.WriteParameters(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.IO.StreamWriter)">
            <summary>
            Writes parameters to a stream that will be written to the body of a POST request.
            </summary>
        </member>
        <member name="P:LinqToWiki.Downloader.UseMaxlag">
            <summary>
            Whether to set the <c>maxlag</c> parameter to limit queries in times of high load.
            See <see cref="!:http://www.mediawiki.org/wiki/Manual:Maxlag_parameter">Maxlag parameter in the MediaWiki manual</see>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Downloader.LogDownloading">
            <summary>
            Whether each request should be logged to the console.
            </summary>
        </member>
        <member name="P:LinqToWiki.Downloader.UserAgent">
            <summary>
            The value of the <c>User-Agent</c> header of requests.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.EnumFixer">
            <summary>
            Fixes expression containing comparison between enum property and integer constant
            into one that uses enum value. This is necessary for further processing.
            </summary>
            <remarks>
            Expressions that compare enum property with a enum constant (e.g. <c>x.Expiry == Expiry.Indefinite</c>)
            are represented using a cast and an integer constant in compiler generated Expression
            (e.g. <c>(int)x.Expiry == 0</c>).
            
            This class converts the latter form back into the former, so that it can be easily processesed later.
            </remarks>
        </member>
        <member name="M:LinqToWiki.Expressions.EnumFixer.PerformFix(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Actually modifies the expression.
            Works only on expressions that have the constant on the right side.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.EnumFixer.Fix(System.Linq.Expressions.Expression)">
            <summary>
            Fixes expression containing enum into better form.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.ExpressionExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Linq.Expressions.Expression"/> types.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionExtensions.Switch(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Switches sides of a binary expression.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.ExpressionFinder">
            <summary>
            Searches an <see cref="T:System.Linq.Expressions.Expression"/> for a matching subexpression.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionFinder.Single``1(System.Linq.Expressions.Expression,System.Func{``0,System.Boolean})">
            <summary>
            Searches <see cref="!:expression"/> for a single subexpression of type <see cref="!:T"/>
            that satisfies <see cref="!:condition"/>.
            Behaves similarly to <see cref="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.ExpressionFinder.Finder`1">
            <summary>
            Helper class that looks for a subexpression of type <see cref="!:T"/>
            that satisfies a condition.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionFinder.Finder`1.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Searches for matching subexpressions in <see cref="!:node"/>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Expressions.ExpressionFinder.Finder`1.Results">
            <summary>
            Matching expressions that were found.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.ExpressionParser">
            <summary>
            Parses various expression kinds and returns them as a <see cref="T:LinqToWiki.Parameters.QueryParameters`2"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseWhere``3(System.Linq.Expressions.Expression{System.Func{``2,System.Boolean}},LinqToWiki.Parameters.QueryParameters{``0,``1})">
            <summary>
            Parses a <c>where</c> expression.
            </summary>
            <param name="expression">Expression to parse.</param>
            <param name="previousParameters">Previous parameters, whose values should be included in the result.</param>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseWhereSubexpression``2(System.Linq.Expressions.Expression,LinqToWiki.Parameters.QueryParameters{``0,``1})">
            <summary>
            Parses a single expression from <c>where</c>. If necessary, calls itself recursivelly.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.AddValue``2(LinqToWiki.Parameters.QueryParameters{``0,``1},System.Tuple{System.Linq.Expressions.MemberExpression,System.Object})">
            <summary>
            Adds single value to QueryParameters based on a property expression and a unformatted value from a <c>Tuple</c>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.AddValue``2(LinqToWiki.Parameters.QueryParameters{``0,``1},System.Linq.Expressions.MemberExpression,System.Object)">
            <summary>
            Adds single value to QueryParameters based on a property expression and a unformatted value.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseWhereEqualExpression(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Parses a part of <c>where</c> expression that contains <c>==</c>.
            </summary>
            <param name="expression">Subexpression to parse.</param>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParsePropertyEqualsConstantExpression(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Parses an expression that contains <c>==</c> and parameters in the “correct” order.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ReversePropertyName(System.String)">
            <summary>
            Reverses property name into the form used by the API.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseOrderBy``4(System.Linq.Expressions.Expression{System.Func{``2,``3}},LinqToWiki.Parameters.QueryParameters{``0,``1},System.Boolean)">
            <summary>
            Parses an <c>orderby</c> expression.
            </summary>
            <param name="expression">Expression to parse.</param>
            <param name="previousParameters">Previous parameters, whose values should be included in the result.</param>
            <param name="ascending">Should the ordering be ascending?</param>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseSelect``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},LinqToWiki.Parameters.QueryParameters{``0,``0})">
            <summary>
            Parses a <c>select</c> expression.
            </summary>
            <param name="expression">Expression to parse.</param>
            <param name="previousParameters">Previous parameters, whose values should be included in the result.</param>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionParser.ParseIdentitySelect``1(System.Linq.Expressions.Expression{System.Func{``0,``0}},LinqToWiki.Parameters.QueryParameters{``0,``0})">
            <summary>
            Parses a <c>select</c> expression that looks like an identity (based on it type).
            </summary>
            <param name="expression">Expression to parse.</param>
            <param name="previousParameters">Previous parameters, whose values should be included in the result.</param>
        </member>
        <member name="T:LinqToWiki.Expressions.ExpressionReplacer">
            <summary>
            Replaces an expression with another one.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.ExpressionReplacer.Replace(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Returns <see cref="!:expression"/> with instances of <see cref="!:toReplace"/>
            replaced by <see cref="!:replaceWith"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.PageExpressionParser">
            <summary>
            Parses queries that use a page source.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.PageExpressionParser.ParseSelect``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},LinqToWiki.Parameters.PageQueryParameters,System.Func{LinqToWiki.Internals.PageData,``1}@)">
            <summary>
            Parses the select clause of a page source query.
            The result is a modified collection of parameters
            and a delegate that can be used to create the result for each item
            (in the form of <see cref="T:LinqToWiki.Internals.PageData"/>).
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.PageSelectVisitor">
            <summary>
            Does the heavy lifting for <see cref="M:LinqToWiki.Expressions.PageExpressionParser.ParseSelect``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},LinqToWiki.Parameters.PageQueryParameters,System.Func{LinqToWiki.Internals.PageData,``1}@)"/>´.
            </summary>
        </member>
        <member name="F:LinqToWiki.Expressions.PageSelectVisitor.NonInfoProperties">
            <summary>
            Result properties that are always present and don't need prop=info
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.PageSelectVisitor.BaseTypes(System.Type)">
            <summary>
            Lists base types of a given <see cref="!:type"/>.
            For generic types, the result contains their generic type definitions.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.PageSelectVisitor.Process``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{LinqToWiki.Internals.PageData,``1}@)">
            <summary>
            The entry-point of <see cref="T:LinqToWiki.Expressions.PageSelectVisitor"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Expressions.UsedPropertiesGatherer">
            <summary>
            Gathers information about properties of an object used in an expression.
            </summary>
        </member>
        <member name="M:LinqToWiki.Expressions.UsedPropertiesGatherer.Gather(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
            Gathers information about properties of <see cref="!:needle"/> in <see cref="!:haystack"/>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Expressions.UsedPropertiesGatherer.UsedProperties">
            <summary>
            List of properties of an object used in the expression
            </summary>
        </member>
        <member name="P:LinqToWiki.Expressions.UsedPropertiesGatherer.UsedDirectly">
            <summary>
            Was the object used directly (without accesing its property) in the expression?
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.NamespaceInfo">
            <summary>
            Contains information about namespaces in a wiki.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.NamespaceInfo.#ctor(System.Collections.Generic.IEnumerable{LinqToWiki.Namespace})">
            <summary>
            Creates a <see cref="T:LinqToWiki.Internals.NamespaceInfo"/> based on a collection of namespaces.
            </summary>
            <param name="namespaces"></param>
        </member>
        <member name="M:LinqToWiki.Internals.NamespaceInfo.#ctor(LinqToWiki.Internals.WikiInfo)">
            <summary>
            Creates a <see cref="T:LinqToWiki.Internals.NamespaceInfo"/> by downloading the namespace information
            for a wiki.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.NamespaceInfo.GetNamespaces(LinqToWiki.Internals.WikiInfo)">
            <summary>
            Downloads the namespaces for a wiki.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.NamespaceInfo.Item(System.Int32)">
            <summary>
            Gets namespace by its ID.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.PageData">
            <summary>
            Represents information about a single page from a page source query,
            including information from secondary paging.
            </summary>
        </member>
        <member name="F:LinqToWiki.Internals.PageData.m_data">
            <summary>
            Contains named data lists.
            Each data list contains data for given property (e.g. <c>categories</c>) from already retrieved
            secondary paging.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PageData.AddData(System.Xml.Linq.XElement)">
            <summary>
            When secondary paging progresses, this method is used to add new data
            to the <see cref="T:LinqToWiki.Internals.PageData"/> object.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PageData.GetOrCreateDataList(System.String)">
            <summary>
            Returns a data list with the given name.
            If one doesn't exist yet, it's created first.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PageData.GetData``1(System.String)">
            <summary>
            Returns the collection of objects for the prop with the given name
            for this page.
            The collection is lazy and causes secondary paging to progress if necessary.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.PageData.PageId">
            <summary>
            Page ID of the page.
            Can be <c>null</c> for missing or invalid pages.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.PageProperties`1">
            <summary>
            Contains <see cref="T:LinqToWiki.Internals.QueryTypeProperties"/> objects for the properties
            of a page type <see cref="!:TPage"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.PagingManager">
            <summary>
            Handles secondary paging for a set of pages from the same primary page.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PagingManager.SetPages(System.Collections.Generic.IEnumerable{LinqToWiki.Internals.PageData})">
            <summary>
            Sets the set of pages to handle.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PagingManager.HasMore(System.String)">
            <summary>
            Are there any more secondary pages for the given property?
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.PagingManager.GetMore">
            <summary>
            Retrieves one more secondary page
            and puts data from it to the corresponding <see cref="T:LinqToWiki.Internals.PageData"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryPageProcessor">
            <summary>
            Handles executing of page source queries.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryPageProcessor.ExecuteList``1(LinqToWiki.Parameters.PageQueryParameters,System.Func{LinqToWiki.Internals.PageData,``0},System.Collections.Generic.Dictionary{System.String,LinqToWiki.Internals.QueryTypeProperties})">
            <summary>
            Returns the results of the query as a lazy collection.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryPageProcessor.ProcessParameters(System.Collections.Generic.IEnumerable{LinqToWiki.Parameters.PropQueryParameters},System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Collections.Generic.Dictionary{System.String,LinqToWiki.Internals.QueryTypeProperties},System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Processes the data about the query and returns a collection of query parameters.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryProcessor`1">
            <summary>
            Processes query parameters and parses the result of the query.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryProcessor">
            <summary>
            Processes query parameters and parses the result of the query.
            Non-generic, static part of <see cref="T:LinqToWiki.Internals.QueryProcessor`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.Download(LinqToWiki.Internals.WikiInfo,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Tuple{System.String,System.String})">
            <summary>
            Executes query based on the given parameters and returns the results as an XML element.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.Download(LinqToWiki.Internals.WikiInfo,System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}})">
            <summary>
            Executes query based on the given parameters and returns the results as an XML element.
            Supports multiple query-contine parameters.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.ParseError(System.Xml.Linq.XElement)">
            <summary>
            Parses error element returned from the API into an <see cref="T:LinqToWiki.ApiErrorException"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.ProcessParameters(LinqToWiki.Internals.QueryTypeProperties,LinqToWiki.Parameters.QueryParameters,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Processes the data about the query and returns a collection of query parameters.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.GetQueryContinue(System.Xml.Linq.XElement,System.String)">
            <summary>
            Gets query-continue values for a given module.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor.GetQueryContinues(System.Xml.Linq.XElement)">
            <summary>
            Parses query-continue values in a query result.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.ExecuteList``1(LinqToWiki.Parameters.QueryParameters{`0,``0})">
            <summary>
            Executes a query based on the <see cref="!:parameters"/> and returns a lazy collection of results.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.GetListItems``1(System.Func{`0,``0},System.Xml.Linq.XElement)">
            <summary>
            Retrieves items for a single primary page.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.ExecuteSingle``1(LinqToWiki.Parameters.QueryParameters{`0,``0})">
            <summary>
            Executes a query based on the <see cref="!:parameters"/> and returns a single result.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.Download(System.Collections.Generic.IEnumerable{System.Tuple{System.String,System.String}},System.Tuple{System.String,System.String})">
            <summary>
            Executes query based on the given parameters and returns the results as an XML element.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.ProcessParameters(LinqToWiki.Parameters.QueryParameters,System.Boolean)">
            <summary>
            Processes the data about the query and returns a collection of query parameters.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.GetPageProcessor">
            <summary>
            Returns a <see cref="T:LinqToWiki.Internals.QueryPageProcessor"/> used in page source queries.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryProcessor`1.ProcessGeneratorParameters(LinqToWiki.Parameters.QueryParameters)">
            <summary>
            Returns a delegate that can be used to get generator parameters for a given limit.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryRepresentation">
            <summary>
            Comverts types used in queries to their representation in the query as a string.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(LinqToWiki.Namespace)">
            <summary>
            Converts namespace object to its query representation: its id.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.String)">
            <summary>
            Converts a string to its query representation: itself.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.DateTime)">
            <summary>
            Converts a DateTime to its query representation: ISO 8601 formatted string.
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.Boolean)">
            <summary>
            Converts a bool to its query representation:
            an empty string for <c>true</c>, nothing (represented here as <c>null</c>) for <c>false</c>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.Int32)">
            <summary>
            Converts an int to its query representation.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.Int64)">
            <summary>
            Converts a long to its query representation.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(LinqToWiki.Internals.StringValue)">
            <summary>
            Converts a <see cref="T:LinqToWiki.Internals.StringValue"/> to its query representation: the underlying string value.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts a collection to its query representation:
            the query representations of each of the members, separated by <c>|</c>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryString(System.Object)">
            <summary>
            “Tries” to convert an object of an unknown type to its query representation.
            Always throws <see cref="T:System.InvalidOperationException"/>.
            
            Used to provide better exception on failure for <see cref="M:LinqToWiki.Internals.QueryRepresentation.ToQueryStringDynamic(System.Object)"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryRepresentation.ToQueryStringDynamic(System.Object)">
            <summary>
            Tries to convert an object to its query representation based on its runtime type.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryType">
            <summary>
            Type of query module.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.SortType">
            <summary>
            Distinguishes what parameter does the <c>dir</c> parameter of a module take:
            <c>ascending</c>/<c>descending</c> or <c>newer</c>/<c>older</c>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryTypeProperties">
            <summary>
            Represents a module and its properties.
            Non-generic part of <see cref="T:LinqToWiki.Internals.QueryTypeProperties`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryTypeProperties.GetProps(System.String)">
            <summary>
            Returns the value of <c>prop</c> for given property.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryTypeProperties.GetAllProps">
            <summary>
            Returns all possible values for <c>prop</c>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.ModuleName">
            <summary>
            Name of the module.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.Prefix">
            <summary>
            Prefix that is used by this type of query.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.QueryType">
            <summary>
            Type of the query module, or <c>null</c>, if it's not a query module.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.SortType">
            <summary>
            Whether <c>dir</c> parameter uses <c>ascending</c>/<c>descending</c> or <c>newer</c>/<c>older</c>.
            If <c>null</c>, module doesn't support sorting.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.BaseParameters">
            <summary>
            Parameters, that are included in all queries of this type.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.QueryTypeProperties.Parser">
            <summary>
            Returns a delegate that can be used for parsing of results for this module.
            Non-generic version of <see cref="M:LinqToWiki.Internals.QueryTypeProperties`1.Parse(System.Xml.Linq.XElement,LinqToWiki.Internals.WikiInfo)"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.QueryTypeProperties`1">
            <summary>
            Represents a module and its properties.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.QueryTypeProperties`1.Parse(System.Xml.Linq.XElement,LinqToWiki.Internals.WikiInfo)">
            <summary>
            Parses an XML element representing one item from the result.
            Returns the parsed object, possibly filled only partially,
            if some attributes of the XML element are missing.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.StringValue">
            <summary>
            Base type for string “enums”.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.StringValue.Value">
            <summary>
            The underlying string value.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.ValueParser">
            <summary>
            Parses the results from an API into a primitive type.
            In a way, a couterpart to <see cref="T:LinqToWiki.Internals.QueryRepresentation"/>.
            Used by generated code.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseString(System.String)">
            <summary>
            “Parses” a string value. Directly returns original string.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseDateTime(System.String)">
            <summary>
            Parses a DateTime. The value of <c>infinity</c> is parsed as <see cref="F:System.DateTime.MaxValue"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseNamespace(System.String,LinqToWiki.Internals.WikiInfo)">
            <summary>
            Parses a namespace.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseBoolean(System.String)">
            <summary>
            Parses a boolean. Returns <c>true</c> for empty string, throws an exception otherwise.
            Doesn't get called, if the value if <c>false</c>, because then the property is not present
            in the result at all.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseInt32(System.String)">
            <summary>
            Parses an int.
            </summary>
        </member>
        <member name="M:LinqToWiki.Internals.ValueParser.ParseInt64(System.String)">
            <summary>
            Parses a long.
            </summary>
        </member>
        <member name="T:LinqToWiki.Internals.WikiInfo">
            <summary>
            Contains information about a wiki necessary to access its API.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.UserAgent">
            <summary>
            Varying part of the UserAgent HTTP header.
            Should be something like <c>TheNameOfMyBot/1.0 (http://website, myemail@site)</c>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.BaseUrl">
            <summary>
            Base URL of the wiki.
            For example <c>http://en.wikipedia.org/</c> or <c>http://localhost/wiki/</c>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.ApiUrl">
            <summary>
            The absolute URL of api.php.
            For example <c>http://en.wikipedia.org/w/api.php</c> or <c>http://localhost/wiki/api.php</c>.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.Downloader">
            <summary>
            Object that can be used to execute queries against this wiki.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.Namespaces">
            <summary>
            Collection of namespaces of this wiki.
            </summary>
        </member>
        <member name="P:LinqToWiki.Internals.WikiInfo.PagesSourcePageSize">
            <summary>
            How many pages should be in a single page of a <see cref="T:LinqToWiki.PagesSource`1"/>. Defaults to 50.
            Won't work correctly if set to more than the maximum set by the wiki.
            </summary>
        </member>
        <member name="T:LinqToWiki.Namespace">
            <summary>
            Represenst a namespace on a wiki.
            See <see cref="!:http://www.mediawiki.org/wiki/Manual:Namespace">Namespace in the MediaWiki manual</see>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Namespace.#cctor">
            <summary>
            Initializes the default namespaces.
            </summary>
        </member>
        <member name="M:LinqToWiki.Namespace.Get(System.Int32)">
            <summary>
            Returns a namespace based on its ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:LinqToWiki.Namespace.Parse(System.Xml.Linq.XElement)">
            <summary>
            Parses the <c>namespaces</c> element of a <c>siteinfo</c> query,
            returning a collection of namespaces on a wiki.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="P:LinqToWiki.Namespace.Id">
            <summary>
            ID of the namespace
            </summary>
        </member>
        <member name="P:LinqToWiki.Namespace.Name">
            <summary>
            Name of the namespace
            </summary>
        </member>
        <member name="T:LinqToWiki.GeneratorPagesCollection">
            <summary>
            Collection of pages for a <see cref="T:LinqToWiki.GeneratorPagesSource`1"/>.
            </summary>
        </member>
        <member name="T:LinqToWiki.IPagesCollection">
            <summary>
            Represents a set of pages, can be used to retrieve query parameters
            for batches of the set.
            Similar to <see cref="T:System.Collections.Generic.IEnumerator`1"/>,
            when compared with <see cref="T:LinqToWiki.PagesSource`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.IPagesCollection.HasMorePages(System.Tuple{System.String,System.String})">
            <summary>
            Whether there are any more pages of pages available.
            </summary>
        </member>
        <member name="M:LinqToWiki.IPagesCollection.GetNextPage(System.Int32)">
            <summary>
            Returns the parameters to retrieve the next page of pages.
            </summary>
        </member>
        <member name="T:LinqToWiki.GeneratorPagesSource`1">
            <summary>
            Page source for a generator.
            </summary>
        </member>
        <member name="T:LinqToWiki.PagesSource`1">
            <summary>
            A page source, used in queries about a set of pages,
            where the page source represents the set.
            Similar to <see cref="T:System.Collections.Generic.IEnumerable`1"/>,
            when compared with <see cref="T:LinqToWiki.IPagesCollection"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.PagesSource`1.GetPagesCollection">
            <summary>
            The object that can be used to create parameters for queries for the set of pages.
            </summary>
        </member>
        <member name="M:LinqToWiki.PagesSource`1.Select``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Retrieves the selected information for each page in this page source.
            </summary>
        </member>
        <member name="T:LinqToWiki.ListPagesCollection">
            <summary>
            Collection of pages for a <see cref="T:LinqToWiki.ListSourceBase`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.ListPagesCollection.MoveIfNecessary">
            <summary>
            Moves the internal enumerator if necessary.
            </summary>
        </member>
        <member name="T:LinqToWiki.ListSourceBase`1">
            <summary>
            Base type for page sources based on a static list of pages.
            </summary>
        </member>
        <member name="T:LinqToWiki.PageIdsSource`1">
            <summary>
            Page source based on a static collection of page IDs.
            </summary>
        </member>
        <member name="T:LinqToWiki.RevIdsSource`1">
            <summary>
            Page source based on a static collection of revision IDs.
            </summary>
        </member>
        <member name="T:LinqToWiki.TitlesSource`1">
            <summary>
            Page source based on a static collection of page titles.
            </summary>
        </member>
        <member name="T:LinqToWiki.Parameters.NameValueParameter">
            <summary>
            Node of a linked list of name-value pairs, that represent general query parameters.
            Also acts as a collection of parameters from the linked list ending with the current one.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.NameValueParameter.Previous">
            <summary>
            Previous node in the list, or <c>null</c>, if this is the last one.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.NameValueParameter.Name">
            <summary>
            Name of the this parameter.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.NameValueParameter.Value">
            <summary>
            Value of this parameter.
            Can represent multiple actual values, separated by <c>|</c>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Parameters.PageQueryParameters">
            <summary>
            Parameters for a page source query.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.PageQueryParameters.WithParameters(System.Collections.Generic.IEnumerable{LinqToWiki.Parameters.PropQueryParameters})">
            <summary>
            Returns new <see cref="T:LinqToWiki.Parameters.PageQueryParameters"/> that is a copy of this instance
            with <see cref="P:LinqToWiki.Parameters.PageQueryParameters.PropQueryParametersCollection"/> set.
            </summary>
            <param name="parametersCollection"></param>
            <returns></returns>
        </member>
        <member name="P:LinqToWiki.Parameters.PageQueryParameters.PagesCollection">
            <summary>
            Collection of primary pages.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.PageQueryParameters.PropQueryParametersCollection">
            <summary>
            Parameters for each prop.
            </summary>
        </member>
        <member name="T:LinqToWiki.Parameters.PropQueryParameters">
            <summary>
            Query parameters for one prop module.
            </summary>
        </member>
        <member name="T:LinqToWiki.Parameters.QueryParameters">
            <summary>
            Non-generic part of <see cref="T:LinqToWiki.Parameters.QueryParameters`2"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters.CopyTo(LinqToWiki.Parameters.QueryParameters)">
            <summary>
            Copies properties of this instance to <see cref="!:target"/>.
            Copies only properties of <see cref="T:LinqToWiki.Parameters.QueryParameters"/> and not the inherited classes.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters.Create``1">
            <summary>
            Creates new generic query parameters.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.QueryParameters.Value">
            <summary>
            Linked list of general parameters.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.QueryParameters.Sort">
            <summary>
            Property to sort by. Is represented by <c>sort</c> in the query.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.QueryParameters.Ascending">
            <summary>
            Sort in ascending direction? Is represented by <c>dir</c> in the query.
            If <c>null</c>, no sorting is done.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.QueryParameters.Properties">
            <summary>
            Properties of the source that should be included in the result.
            The value of <c>null</c> means that all properties should be included.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.PropQueryParameters.WithProperties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a copy of current instance with <see cref="P:LinqToWiki.Parameters.QueryParameters.Properties"/> set.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.PropQueryParameters.WithOnlyFirst">
            <summary>
            Returns a copy of current instance with <see cref="P:LinqToWiki.Parameters.PropQueryParameters.OnlyFirst"/> set to <c>true</c>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:LinqToWiki.Parameters.PropQueryParameters.CopyFrom(LinqToWiki.Parameters.QueryParameters)">
            <summary>
            Copies the data from <see cref="!:parameters"/> into current instance.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.PropQueryParameters.AddSingleValue(System.String,System.String)">
            <summary>
            Adds a single name-value pair to the current query and returns the result.
            The parameter <see cref="!:value"/> can actually represent multiple values.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.PropQueryParameters.PropName">
            <summary>
            Name of the module.
            </summary>
        </member>
        <member name="P:LinqToWiki.Parameters.PropQueryParameters.OnlyFirst">
            <summary>
            Should only the first item be retrieved for each page?
            Used by modules that implement <see cref="T:LinqToWiki.IFirst"/>, i.e. <c>revisions</c>.
            </summary>
        </member>
        <member name="T:LinqToWiki.Parameters.QueryParameters`2">
            <summary>
            Represents parameters to a query.
            This class is immutable. Methods that modify the query return the modified one
            and don't affect the current object.
            </summary>
            <typeparam name="TSource">Type used to represent the source of the query.</typeparam>
            <typeparam name="TResult">Type of the item in the result collection.</typeparam>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters`2.Clone">
            <summary>
            Creates a clone of the current object.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters`2.AddSingleValue(System.String,System.String)">
            <summary>
            Adds a single name-value pair to the current query and returns the result.
            The parameter <see cref="!:value"/> can actually represent multiple values.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters`2.AddMultipleValues(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a name-value pair to the current query and returns the result.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters`2.WithSort(System.String,System.Boolean)">
            <summary>
            Adds sorting to the current query and returns the result.
            </summary>
        </member>
        <member name="M:LinqToWiki.Parameters.QueryParameters`2.WithSelect``1(System.Collections.Generic.IEnumerable{System.String},System.Func{`0,``0})">
            <summary>
            Adds projection to the current query and returns the result.
            </summary>
            <param name="properties">
            Properties of the source that should be included in the result.
            The value of <c>null</c> means that all properties should be included.
            </param>
            <param name="selector">Function, that can be used to convert an instance of the source object to the result object.</param>
        </member>
        <member name="P:LinqToWiki.Parameters.QueryParameters`2.Selector">
            <summary>
            Function, that can be used to convert an instance of the source object to the result object.
            </summary>
        </member>
        <member name="T:LinqToWiki.IFirst">
            <summary>
            Marker interface for prop modules that show only the first item for each page
            (i.e. <c>revisions</c>).
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQueryFirstExtension">
            <summary>
            Extensions for modules that implement <see cref="T:LinqToWiki.IFirst"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryFirstExtension.FirstOrDefault``2(LinqToWiki.WikiQueryResult{``0,``1})">
            <summary>
            Selects the first result for each page, or <c>null</c>, if there are no results.
            </summary>
        </member>
        <member name="T:LinqToWiki.IWikiQueryResult">
            <summary>
            Non-generic base interface for <see cref="T:LinqToWiki.WikiQueryResult`2"/>.
            </summary>
        </member>
        <member name="P:LinqToWiki.IWikiQueryResult.Parameters">
            <summary>
            Parameters that can be used to execute the query.
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQuerySortable`3">
            <summary>
            Represents a sortable query.
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQuery`2">
            <summary>
            Represents a nonsortable query.
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQueryResult`2">
            <summary>
            Represents the result of a query.
            The query is actually executed only after <see cref="M:LinqToWiki.WikiQueryResult`2.ToEnumerable"/>
            is called and its result is enumerated.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryResult`2.ToList">
            <summary>
            Exectes the query as a <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryResult`2.ToEnumerable">
            <summary>
            Executes the query as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuery`2.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Specify filter or other parameter of the query.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuery`2.Select(System.Linq.Expressions.Expression{System.Func{`1,`1}})">
            <summary>
            Specify that the result should be the whole object.
            The parameter has to be an identity (e.g. <c>x => x</c>).
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuery`2.Select``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            Selects the result object.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortable`3.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Specify filter or other parameter of the query.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortable`3.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            Specify that the query should be ordered ascending by the given key.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortable`3.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            Specify that the query should be ordered descending by the given key.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortable`3.Select(System.Linq.Expressions.Expression{System.Func{`2,`2}})">
            <summary>
            Specify that the result should be the whole object.
            The parameter has to be an identity (e.g. <c>x => x</c>).
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQuerySortableGenerator`4">
            <summary>
            Represents a sortable query that can be used as a generator.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortableGenerator`4.Where(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Specify filter or other parameter of the query.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortableGenerator`4.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`2,``0}})">
            <summary>
            Specify that the query should be ordered ascending by the given key.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortableGenerator`4.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`2,``0}})">
            <summary>
            Specify that the query should be ordered descending by the given key.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQuerySortableGenerator`4.Select(System.Linq.Expressions.Expression{System.Func{`3,`3}})">
            <summary>
            Specify that the result should be the whole object.
            The parameter has to be an identity (e.g. <c>x => x</c>).
            </summary>
        </member>
        <member name="P:LinqToWiki.WikiQuerySortableGenerator`4.Pages">
            <summary>
            Get generator page source for the current query, that can be used for further queries.
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQueryGenerator`3">
            <summary>
            Represents a nonsortable query that can be used as a generator
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryGenerator`3.Where(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
            Specify filter or other parameter of the query.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryGenerator`3.Select(System.Linq.Expressions.Expression{System.Func{`2,`2}})">
            <summary>
            Specify that the result should be the whole object.
            The parameter has to be an identity (e.g. <c>x => x</c>).
            </summary>
        </member>
        <member name="P:LinqToWiki.WikiQueryGenerator`3.Pages">
            <summary>
            Get generator page source for the current query, that can be used for further queries.
            </summary>
        </member>
        <member name="T:LinqToWiki.WikiQueryPageResult`1">
            <summary>
            Represents a result of a “props” query.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryPageResult`1.ToList">
            <summary>
            Exectes the query as a <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
        </member>
        <member name="M:LinqToWiki.WikiQueryPageResult`1.ToEnumerable">
            <summary>
            Executes the query as an <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
        </member>
    </members>
</doc>
